// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc364.TutorialJava;
    
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveSystemleftFront;
    public static SpeedController driveSystemleftRear;
    public static SpeedController driveSystemrightFront;
    public static SpeedController driveSystemrightRear;
    public static RobotDrive driveSystemrobotDrive;
    public static AnalogPotentiometer liftSystemliftSensor;
    public static SpeedController liftSystemliftMotor;
    public static DoubleSolenoid armSystemarmSolenoid;
    public static DoubleSolenoid shiftSystemshiftSolenoid;
    public static SpeedController intakeSystemleftIntake;
    public static SpeedController intakeSystemrightIntake;
    public static RobotDrive intakeSystemintakeDrive;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveSystemleftFront = new VictorSP(1);
        LiveWindow.addActuator("driveSystem", "leftFront", (VictorSP) driveSystemleftFront);
        
        driveSystemleftRear = new VictorSP(0);
        LiveWindow.addActuator("driveSystem", "leftRear", (VictorSP) driveSystemleftRear);
        
        driveSystemrightFront = new VictorSP(3);
        LiveWindow.addActuator("driveSystem", "rightFront", (VictorSP) driveSystemrightFront);
        
        driveSystemrightRear = new VictorSP(2);
        LiveWindow.addActuator("driveSystem", "rightRear", (VictorSP) driveSystemrightRear);
        
        driveSystemrobotDrive = new RobotDrive(driveSystemleftFront, driveSystemleftRear,
              driveSystemrightFront, driveSystemrightRear);
        
        driveSystemrobotDrive.setSafetyEnabled(true);
        driveSystemrobotDrive.setExpiration(0.1);
        driveSystemrobotDrive.setSensitivity(0.5);
        driveSystemrobotDrive.setMaxOutput(1.0);

        liftSystemliftSensor = new AnalogPotentiometer(3, 1.0, 0.0);
        LiveWindow.addSensor("liftSystem", "liftSensor", liftSystemliftSensor);
        
        liftSystemliftMotor = new Talon(4);
        LiveWindow.addActuator("liftSystem", "liftMotor", (Talon) liftSystemliftMotor);
        
        armSystemarmSolenoid = new DoubleSolenoid(0, 0, 1);      
        LiveWindow.addActuator("armSystem", "armSolenoid", armSystemarmSolenoid);
        
        shiftSystemshiftSolenoid = new DoubleSolenoid(0, 2, 3);      
        LiveWindow.addActuator("shiftSystem", "shiftSolenoid", shiftSystemshiftSolenoid);
        
        intakeSystemleftIntake = new Talon(5);
        LiveWindow.addActuator("intakeSystem", "leftIntake", (Talon) intakeSystemleftIntake);
        
        intakeSystemrightIntake = new Talon(6);
        LiveWindow.addActuator("intakeSystem", "rightIntake", (Talon) intakeSystemrightIntake);
        
        intakeSystemintakeDrive = new RobotDrive(intakeSystemleftIntake, intakeSystemrightIntake);
        
        intakeSystemintakeDrive.setSafetyEnabled(true);
        intakeSystemintakeDrive.setExpiration(0.1);
        intakeSystemintakeDrive.setSensitivity(0.5);
        intakeSystemintakeDrive.setMaxOutput(1.0);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
